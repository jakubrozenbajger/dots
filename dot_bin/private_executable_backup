#!/bin/bash

# 1. defaults
DESTINATION="/"
REAL_RUN="no"

# 2. config overrides
_backup_conf_file="$HOME/.backuprc"
if ! [ -f "$_backup_conf_file" ]; then
	echo "# backup config
	" > "$_backup_conf_file"
fi
source "$_backup_conf_file"

[ "$1" == "-c" ]  && REAL_RUN="yes"

## CONSTANTS
FILTER_FILE="$HOME/.backup.filter"
SOURCE="$HOME/"

# Exit if destination is not provided
if [ "$DESTINATION" == "/" ]; then
    echo "Destination needs to be provided in $_backup_conf_file"
    exit 1
fi

# Append current PC (hostname) and username to destination
DESTINATION="${DESTINATION%/}/$(hostname)_$USER-$(id -u "$USER")"

TIMESTAMP=$(date +%Y%m%d%H%M%S)

rsync_commands=(
    "-av"
    "--progress"
    "--human-readable"
    "--log-file=/tmp/rsync.$TIMESTAMP.log"
    "--prune-empty-dirs"
    "--delete"
    "--delete-excluded"
    "--filter=: $FILTER_FILE"
    "--filter=:- .gitignore"
    "$SOURCE"
    "$DESTINATION"
)

do_rsync() {
    rsync "${rsync_commands[@]}"
}

do_rsync_dry_run() {
    rsync --dry-run "${rsync_commands[@]}"
}

echo "Source:       $SOURCE"
echo "Destination:  $DESTINATION"
echo
if [ "$REAL_RUN" == "yes" ]; then
    echo "Starting backup..."
    echo
    do_rsync
else
    echo "Starting dry run..."
    echo
    do_rsync_dry_run
    echo
    echo "Run command with -c to backup"
fi
